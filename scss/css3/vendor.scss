@charset "UTF-8";
@mixin appearance($value) {
    @include prefixer(appearance, $value, webkit moz ms o spec);
}

@mixin backface-visibility($visibility) {
    @include prefixer(backface-visibility, $visibility, webkit spec);
}

@mixin calc($property, $value) {
    #{$property}: -webkit-calc(#{$value});
    #{$property}: calc(#{$value});
}

@mixin filter($function: none) {
    // <filter-function> [<filter-function]* | none
    @include prefixer(filter, $function, webkit spec);
}

@mixin font-feature-settings($settings...) {
    @if length($settings) == 0 {
        $settings: none;
    }
    @include prefixer(font-feature-settings, $settings, webkit moz spec);
}

@mixin hyphens($hyphenation: none) {
    // none | manual | auto
    @include prefixer(hyphens, $hyphenation, webkit ms spec);
}

@mixin perspective($depth: none) {
    // none | <length>
    @include prefixer(perspective, $depth, webkit spec);
}

@mixin perspective-origin($value: 50% 50%) {
    @include prefixer(perspective-origin, $value, webkit spec);
}

@mixin text-decoration($value) {
    // <text-decoration-line> || <text-decoration-style> || <text-decoration-color>
    @include prefixer(text-decoration, $value, moz);
}

@mixin text-decoration-line($line: none) {
    // none || underline || overline || line-through
    @include prefixer(text-decoration-line, $line, moz);
}

@mixin text-decoration-style($style: solid) {
    // solid || double || dotted || dashed || wavy
    @include prefixer(text-decoration-style, $style, webkit moz);
}

@mixin text-decoration-color($color: currentColor) {
    // currentColor || <color>
    @include prefixer(text-decoration-color, $color, moz);
}

@mixin user-select($value: none) {
    @include prefixer(user-select, $value, webkit moz ms spec);
}
